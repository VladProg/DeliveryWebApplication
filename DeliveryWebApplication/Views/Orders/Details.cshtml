@model DeliveryWebApplication.Controllers.OrdersController.DetailsInfo

@{
    ViewData["Title"] = "Замовлення #" + Model.Order.Id;
}

<h1>Замовлення #@Model.Order.Id</h1>

<style>
    .Creating   { background: #ffffff }
    .Delivering { background: #f0f0ff }
    .Waiting    { background: #fffff0 }
    .Refused    { background: #fff0f0 }
    .Completed  { background: #f0fff0 }
</style>
<br />
<div>
    <dl class="@("row " + Model.Order.StatusId)">
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.StatusName) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.StatusName.Full) </dd>

            <hr />

            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.Customer) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.Customer.NameWithPhone) </dd>
        
        @if(Model.Order.Courier is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.Courier) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.Courier.NameWithPhone) </dd>
        }

            <hr />
        
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.Shop) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.Shop.NameWithAddress) </dd>
        
        @if(Model.Order.CreationTime is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.Address) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.Address) </dd>
        }

            <hr />

            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.FormattedWeight) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.FormattedWeight) </dd>

            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.ProductsCost) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.ProductsCost) </dd>

        @if(Model.Order.CreationTime is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.DeliveryPrice) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.DeliveryPrice) </dd>

            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.TotalCost) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.TotalCost) </dd>

            <hr />
        
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.CreationTime) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.CreationTime) </dd>
        }
        
        @if(Model.Order.DeliveryTime is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.DeliveryTime) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.DeliveryTime) </dd>
        }

            <hr />
        
        @if(Model.Order.CreationTime is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.CustomerComment) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.CustomerComment) </dd>
        }

        @if(Model.Order.CourierComment is not null)
        {
            <dt class = "col-sm-2"> @Html.DisplayNameFor(model => model.Order.CourierComment) </dt>
            <dd class = "col-sm-10"> @Html.DisplayFor(model => model.Order.CourierComment) </dd>
        }
    </dl>
</div>
<div>
    @if(Model.Order.StatusId is Order.Status.Creating && (int?)TempData.Peek("CustomerId") == Model.Order.CustomerId && (string)TempData.Peek("Role")=="customer") { <a class="btn btn-primary" asp-action="Create" asp-route-id=@Model.Order.Id>Підтвердити замовлення</a> <text>|</text> }
    @if(Model.Order.StatusId is Order.Status.Waiting or Order.Status.Refused && (int?)TempData.Peek("CustomerId") == Model.Order.CustomerId && (string)TempData.Peek("Role")=="customer") { <a class="btn btn-danger" asp-action="Cancel" asp-route-id=@Model.Order.Id>Відмінити замовлення</a> <text>|</text> }
    @if(Model.Order.StatusId is Order.Status.Waiting or Order.Status.Refused && TempData.Peek("CourierId") is not null and not 0 && (string)TempData.Peek("Role")=="courier") { <a class="btn btn-primary" asp-action="Deliver" asp-route-id=@Model.Order.Id>Доставити це замовлення</a> <text>|</text> }
    @if(Model.Order.StatusId is Order.Status.Delivering && (int?)TempData.Peek("CourierId") == Model.Order.CourierId && (string)TempData.Peek("Role")=="courier") { <a class="btn btn-danger" asp-action="Refuse" asp-route-id=@Model.Order.Id>Відмінити доставку</a> <text>|</text> }
    @if(Model.Order.StatusId is Order.Status.Delivering && (int?)TempData.Peek("CourierId") == Model.Order.CourierId && (string)TempData.Peek("Role")=="courier") { <a class="btn btn-primary" asp-action="Done" asp-route-id=@Model.Order.Id>Доставлено</a> <text>|</text> }
    <a asp-action="Index">Повернутися до списку замовлень</a>
</div>


<hr />

<h4>Пункти замовлення:</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order.OrderItems.FirstOrDefault().ProductInShop)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order.OrderItems.FirstOrDefault().ProductInShop.FormattedPrice)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Order.OrderItems.FirstOrDefault().FormattedWeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order.OrderItems.FirstOrDefault().Cost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Order.OrderItems) {
        <tr>
            <td valign="middle">
                @Html.DisplayFor(modelItem => item.ProductInShop.Product.Name)
            </td>
            <td valign="middle">
                @Html.DisplayFor(modelItem => item.ProductInShop.FormattedPrice)
            </td>
            <td align="right" valign="middle">
                @if(Model.Order.CreationTime is null && item.ProductInShop.Product.Weight is not null)
                {
                    @item.ProductInShop.Product.FormattedWeight <text>&nbsp;&nbsp;×</text>
                }
            </td>
            <td valign="middle">
                @if(Model.Order.CreationTime is null && (string)TempData.Peek("Role")=="customer")
                {
                    <form asp-action="Details">
                        <input type="hidden" asp-for="OrderItem.Id" value=@item.Id />
                        <table><tr>
                            @if(item.ProductInShop.Product.Weight is null)
                            {
                                <td width=100px>
                                    <input asp-for="OrderItem.Weight" class="form-control" onkeypress=@(@"return /[0-9.]/i.test(event.key)") value=@item.Weight?.ToString("n3")/>
                                </td>
                                <td>&nbsp;кг&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            }
                            else
                            {
                                <td width=100px>
                                    <input asp-for="OrderItem.Count" class="form-control" onkeypress=@(@"return /[0-9]/i.test(event.key)") value=@item.Count.ToString()/>
                                </td>
                                <td>&nbsp;шт.&nbsp;&nbsp;&nbsp;</td>
                            }
                            <td><input type="submit" value="Зберегти" class="btn btn-outline-primary" /></td>
                        </tr></table>
                    </form>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.FormattedWeight)
                }
            </td>
            <td valign="middle">
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td valign="middle">
                @if(Model.Order.CreationTime is null && (string)TempData.Peek("Role")=="customer")
                {
                    <form asp-action="Details">
                        <input type="hidden" asp-for="OrderItem.Id" value=@item.Id />
                        <input type="hidden" asp-for="OrderItem.Count" class="form-control" value=0/>
                        <input type="submit" value="Видалити з замовлення" class="btn btn-outline-danger" />
                    </form>
                }
            </td>
        </tr>
}
    </tbody>
</table>
